{"ast":null,"code":"var _jsxFileName = \"C:\\\\blockchain\\\\ethereum\\\\projects\\\\my-token\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport { MyToken } from \"../ethereum/build/MyToken.json\";\nimport { MyTokenSale } from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input, Container } from 'semantic-ui-react';\nimport Head from 'next/head';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      web3: null,\n      accounts: null,\n      mytokenInstance: null,\n      mytokenSaleInstance: null,\n      tokenPrice: null,\n      tokenBalance: null\n    });\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = MyToken.networks[networkId];\n      const mytokenInstance = new web3.eth.Contract(MyToken.abi, deployedNetwork && deployedNetwork.address);\n      const mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi, deployedNetwork && deployedNetwork.address);\n      this.setState({\n        web3,\n        accounts,\n        my: tokenInstance\n      }, this.loadData);\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"My Token ICO SALE\"));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/blockchain/ethereum/projects/my-token/client/pages/index.js"],"names":["React","Component","getWeb3","MyToken","MyTokenSale","Button","Form","Input","Container","Head","Home","web3","accounts","mytokenInstance","mytokenSaleInstance","tokenPrice","tokenBalance","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","setState","my","tokenInstance","loadData","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,SAA9B,QAA+C,mBAA/C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAAA;AAAA;;AAAA,mCAEnB;AACNU,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,QAAQ,EAAE,IAFJ;AAGNC,MAAAA,eAAe,EAAE,IAHX;AAINC,MAAAA,mBAAmB,EAAC,IAJd;AAKNC,MAAAA,UAAU,EAAE,IALN;AAMNC,MAAAA,YAAY,EAAE;AANR,KAFmB;;AAAA,+CAWP,YAAW;AAC7B,YAAML,IAAI,GAAG,MAAMT,OAAO,EAA1B;AACA,YAAMU,QAAQ,GAAG,MAAMD,IAAI,CAACM,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,SAAS,GAAG,MAAMR,IAAI,CAACM,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AAEA,YAAMC,eAAe,GAAGnB,OAAO,CAACoB,QAAR,CAAiBJ,SAAjB,CAAxB;AAEA,YAAMN,eAAe,GAAG,IAAIF,IAAI,CAACM,GAAL,CAASO,QAAb,CAAsBrB,OAAO,CAACsB,GAA9B,EACtBH,eAAe,IAAIA,eAAe,CAACI,OADb,CAAxB;AAGA,YAAMZ,mBAAmB,GAAG,IAAIH,IAAI,CAACM,GAAL,CAASO,QAAb,CAAsBpB,WAAW,CAACqB,GAAlC,EAC1BH,eAAe,IAAIA,eAAe,CAACI,OADT,CAA5B;AAKA,WAAKC,QAAL,CAAc;AAAEhB,QAAAA,IAAF;AAAQC,QAAAA,QAAR;AAAkBgB,QAAAA,EAAE,EAAEC;AAAtB,OAAd,EAAsD,KAAKC,QAA3D;AAED,KA5B0B;AAAA;;AA8B3BC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKD;;AApC0B;;AAuC7B,eAAerB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport { MyToken } from \"../ethereum/build/MyToken.json\";\nimport { MyTokenSale } from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input, Container } from 'semantic-ui-react';\nimport Head from 'next/head';\n\n\nclass Home extends Component {\n\n  state = {\n    web3: null,\n    accounts: null,\n    mytokenInstance: null,\n    mytokenSaleInstance:null,\n    tokenPrice: null,\n    tokenBalance: null\n  }\n\n  componentDidMount = async() => {\n    const web3 = await getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const networkId = await web3.eth.net.getId();\n\n    const deployedNetwork = MyToken.networks[networkId];\n\n    const mytokenInstance = new web3.eth.Contract(MyToken.abi,\n      deployedNetwork && deployedNetwork.address,\n    );\n    const mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi,\n      deployedNetwork && deployedNetwork.address,\n    );\n\n\n    this.setState({ web3, accounts, my: tokenInstance, }, this.loadData);\n\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>My Token ICO SALE</h1>\n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}