{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\blockchain\\\\ethereum\\\\projects\\\\my-token\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport MyToken from \"../ethereum/build/MyToken.json\";\nimport MyTokenSale from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input, Container } from 'semantic-ui-react';\nimport Head from 'next/head';\n\nvar Home = /*#__PURE__*/function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      web3: null,\n      accounts: null,\n      mytokenInstance: null,\n      mytokenSaleInstance: null,\n      tokenPrice: '',\n      tokenBalance: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var web3, _accounts, networkId, deployedNetwork, mytokenInstance, mytokenSaleInstance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              _accounts = _context.sent;\n              _context.next = 9;\n              return web3.eth.net.getId();\n\n            case 9:\n              networkId = _context.sent;\n              deployedNetwork = MyToken.networks[networkId];\n              mytokenInstance = new web3.eth.Contract(MyToken.abi, deployedNetwork && deployedNetwork.address);\n              mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi, deployedNetwork && deployedNetwork.address);\n\n              _this.setState({\n                web3: web3,\n                accounts: _accounts,\n                mytokenInstance: mytokenInstance,\n                mytokenSaleInstance: mytokenSaleInstance\n              }, _this.loadData);\n\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 16]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"loadData\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this$state, mytokenInstance, mytokenSaleInstance, tokenPrice, balance;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _this$state = _this.state, mytokenInstance = _this$state.mytokenInstance, mytokenSaleInstance = _this$state.mytokenSaleInstance; //const mytokenSaleInstance = this.state.mytokenSaleInstance;\n\n              _context2.next = 4;\n              return mytokenSaleInstance.tokenPrice();\n\n            case 4:\n              tokenPrice = _context2.sent;\n              _context2.next = 7;\n              return mytokenInstance.balanceOf(accounts[0]);\n\n            case 7:\n              balance = _context2.sent;\n              alert(tokenPrice.toNumber()); //alert('my token price is ' + tokenPrice.toNumber());\n              //mytokenInstance.methods.balanceOf()\n\n              _this.setState({\n                tokenPrice: tokenPrice\n              });\n\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, \"My Token ICO SALE\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, this.state.tokenPrice));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["C:/blockchain/ethereum/projects/my-token/client/pages/index.js"],"names":["React","Component","getWeb3","MyToken","MyTokenSale","Button","Form","Input","Container","Head","Home","web3","accounts","mytokenInstance","mytokenSaleInstance","tokenPrice","tokenBalance","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","Contract","abi","address","setState","loadData","console","log","state","balanceOf","balance","alert","toNumber"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,SAA9B,QAA+C,mBAA/C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAGMC,I;;;;;;;;;;;;;;;;4DAEI;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,QAAQ,EAAE,IAFJ;AAGNC,MAAAA,eAAe,EAAE,IAHX;AAINC,MAAAA,mBAAmB,EAAE,IAJf;AAKNC,MAAAA,UAAU,EAAE,EALN;AAMNC,MAAAA,YAAY,EAAE;AANR,K;;8IASY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEGd,OAAO,EAFV;;AAAA;AAEVS,cAAAA,IAFU;AAAA;AAAA,qBAGOA,IAAI,CAACM,GAAL,CAASC,WAAT,EAHP;;AAAA;AAGVN,cAAAA,SAHU;AAAA;AAAA,qBAIQD,IAAI,CAACM,GAAL,CAASE,GAAT,CAAaC,KAAb,EAJR;;AAAA;AAIVC,cAAAA,SAJU;AAMVC,cAAAA,eANU,GAMQnB,OAAO,CAACoB,QAAR,CAAiBF,SAAjB,CANR;AAQVR,cAAAA,eARU,GAQQ,IAAIF,IAAI,CAACM,GAAL,CAASO,QAAb,CAAsBrB,OAAO,CAACsB,GAA9B,EACtBH,eAAe,IAAIA,eAAe,CAACI,OADb,CARR;AAWVZ,cAAAA,mBAXU,GAWY,IAAIH,IAAI,CAACM,GAAL,CAASO,QAAb,CAAsBpB,WAAW,CAACqB,GAAlC,EAC1BH,eAAe,IAAIA,eAAe,CAACI,OADT,CAXZ;;AAgBhB,oBAAKC,QAAL,CAAc;AAAEhB,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,QAAQ,EAARA,SAAR;AAAkBC,gBAAAA,eAAe,EAAEA,eAAnC;AAAoDC,gBAAAA,mBAAmB,EAAEA;AAAzE,eAAd,EAA8G,MAAKc,QAAnH;;AAhBgB;AAAA;;AAAA;AAAA;AAAA;AAmBhBC,cAAAA,OAAO,CAACC,GAAR;;AAnBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;qIAuBT;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE0C,MAAKC,KAF/C,EAEClB,eAFD,eAECA,eAFD,EAEkBC,mBAFlB,eAEkBA,mBAFlB,EAGP;;AAHO;AAAA,qBAKgBA,mBAAmB,CAACC,UAApB,EALhB;;AAAA;AAKHA,cAAAA,UALG;AAAA;AAAA,qBAMYF,eAAe,CAACmB,SAAhB,CAA0BpB,QAAQ,CAAC,CAAD,CAAlC,CANZ;;AAAA;AAMHqB,cAAAA,OANG;AAOPC,cAAAA,KAAK,CAACnB,UAAU,CAACoB,QAAX,EAAD,CAAL,CAPO,CAQP;AACA;;AACA,oBAAKR,QAAL,CAAc;AAAEZ,gBAAAA,UAAU,EAAEA;AAAd,eAAd;;AAVO;AAAA;;AAAA;AAAA;AAAA;AAYPc,cAAAA,OAAO,CAACC,GAAR;;AAZO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAgBF;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKC,KAAL,CAAWhB,UAAhB,CAFF,CADF;AAMD;;;;EAzDgBd,S;;AA4DnB,eAAeS,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport MyToken from \"../ethereum/build/MyToken.json\";\nimport MyTokenSale from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input, Container } from 'semantic-ui-react';\nimport Head from 'next/head';\n\n\nclass Home extends Component {\n\n  state = {\n    web3: null,\n    accounts: null,\n    mytokenInstance: null,\n    mytokenSaleInstance: null,\n    tokenPrice: '',\n    tokenBalance: ''\n  }\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n\n      const deployedNetwork = MyToken.networks[networkId];\n\n      const mytokenInstance = new web3.eth.Contract(MyToken.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      const mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n\n      this.setState({ web3, accounts, mytokenInstance: mytokenInstance, mytokenSaleInstance: mytokenSaleInstance }, this.loadData);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadData = async () => {\n    try {\n      const { mytokenInstance, mytokenSaleInstance } = this.state;\n      //const mytokenSaleInstance = this.state.mytokenSaleInstance;\n\n      let tokenPrice = await mytokenSaleInstance.tokenPrice();\n      let balance =await mytokenInstance.balanceOf(accounts[0])\n      alert(tokenPrice.toNumber());\n      //alert('my token price is ' + tokenPrice.toNumber());\n      //mytokenInstance.methods.balanceOf()\n      this.setState({ tokenPrice: tokenPrice });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>My Token ICO SALE</h1>\n        <h2>{this.state.tokenPrice}</h2>\n      </div>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}