{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\blockchain\\\\ethereum\\\\projects\\\\my-token\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport MyToken from \"../ethereum/build/MyToken.json\";\nimport MyTokenSale from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport Layout from '../components/layout';\n\nvar Home = /*#__PURE__*/function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      web3: null,\n      accounts: null,\n      account: null,\n      mytokenInstance: null,\n      mytokenSaleInstance: null,\n      tokenPrice: '1000000000000000',\n      tokenBalance: 0,\n      numberofToken: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, networkId, deployedNetwork, mytokenInstance, mytokenSaleInstance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              _context.next = 9;\n              return web3.eth.net.getId();\n\n            case 9:\n              networkId = _context.sent;\n              deployedNetwork = MyToken.networks[networkId];\n              mytokenInstance = new web3.eth.Contract(MyToken.abi, deployedNetwork && deployedNetwork.address);\n              mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi, deployedNetwork && deployedNetwork.address);\n\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                mytokenInstance: mytokenInstance,\n                mytokenSaleInstance: mytokenSaleInstance\n              }, _this.loadData);\n\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 16]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"loadData\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this$state, mytokenInstance, mytokenSaleInstance, accounts, web3, account, tokenPrice, tokenBalance;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _this$state = _this.state, mytokenInstance = _this$state.mytokenInstance, mytokenSaleInstance = _this$state.mytokenSaleInstance, accounts = _this$state.accounts, web3 = _this$state.web3;\n              _context2.next = 4;\n              return web3.eth.getCoinbase();\n\n            case 4:\n              account = _context2.sent;\n              //debugger;\n              //let tokenName = await mytokenInstance.methods.name().call();\n              // let tokenPrice = await mytokenSaleInstance.methods.tokenPrice().call();\n              tokenPrice = web3.utils.fromWei(_this.state.tokenPrice, 'ether');\n              _context2.next = 8;\n              return mytokenInstance.methods.balanceOf(account).call();\n\n            case 8:\n              tokenBalance = _context2.sent;\n\n              // alert(tokenPrice);\n              //alert(tokenBalance);\n              _this.setState({\n                tokenPrice: tokenPrice,\n                tokenBalance: tokenBalance,\n                account: account\n              });\n\n              _context2.next = 16;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              alert(_context2.t0);\n              console.log(_context2.t0);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _this$state2, mytokenSaleInstance, account;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state2 = _this.state, mytokenSaleInstance = _this$state2.mytokenSaleInstance, account = _this$state2.account;\n              _context3.next = 3;\n              return mytokenSaleInstance.methods.buyTokens(_this.state.numberofToken).send({\n                from: account,\n                value: _this.state.tokenPrice * _this.state.numberofToken\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.web3) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 14\n          }\n        }, \"Loading Web3, accounts, and contract...\");\n      }\n\n      return __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, \"My Token ICO SALE\"), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"Introducing \\\"My Token\\\" (DAPP)! Token price is  \", this.state.tokenPrice, \" Ether. You \"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, \"price is \", this.state.tokenPrice), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, \"balance is \", this.state.tokenBalance), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"your account is \", this.state.account), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, __jsx(Input, {\n        focus: true,\n        value: this.state.numberofToken,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            numberofToken: event.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }), __jsx(Button, {\n        primary: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \"Enter\"))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["C:/blockchain/ethereum/projects/my-token/client/pages/index.js"],"names":["React","Component","getWeb3","MyToken","MyTokenSale","Button","Form","Input","Layout","Home","web3","accounts","account","mytokenInstance","mytokenSaleInstance","tokenPrice","tokenBalance","numberofToken","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","Contract","abi","address","setState","loadData","console","log","state","getCoinbase","utils","fromWei","methods","balanceOf","call","alert","buyTokens","send","from","value","onSubmit","event","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport MyToken from \"../ethereum/build/MyToken.json\";\nimport MyTokenSale from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport Layout from '../components/layout';\n\n\n\nclass Home extends Component {\n\n  state = {\n    web3: null,\n    accounts: null,\n    account: null,\n    mytokenInstance: null,\n    mytokenSaleInstance: null,\n    tokenPrice: '1000000000000000',\n    tokenBalance: 0,\n    numberofToken: 0\n  }\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n\n      const deployedNetwork = MyToken.networks[networkId];\n\n      const mytokenInstance = new web3.eth.Contract(MyToken.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      const mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n\n      this.setState({ web3, accounts, mytokenInstance: mytokenInstance, mytokenSaleInstance: mytokenSaleInstance }, this.loadData);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadData = async () => {\n    try {\n      const { mytokenInstance, mytokenSaleInstance, accounts, web3 } = this.state;\n      let account = await web3.eth.getCoinbase();\n\n      //debugger;\n      //let tokenName = await mytokenInstance.methods.name().call();\n\n      // let tokenPrice = await mytokenSaleInstance.methods.tokenPrice().call();\n      let tokenPrice = web3.utils.fromWei(this.state.tokenPrice, 'ether');\n\n      let tokenBalance = await mytokenInstance.methods.balanceOf(account).call();\n      // alert(tokenPrice);\n      //alert(tokenBalance);\n      this.setState({ tokenPrice: tokenPrice, tokenBalance: tokenBalance, account });\n    } catch (error) {\n      alert(error);\n      console.log(error);\n    }\n  }\n\n  onSubmit = async () => {\n    const { mytokenSaleInstance, account } = this.state;\n    await mytokenSaleInstance.methods.buyTokens(this.state.numberofToken).send({ from: account, value: this.state.tokenPrice * this.state.numberofToken });\n\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <Layout>\n        <div>\n          <h1>My Token ICO SALE</h1>\n          <hr />\n          <p>Introducing \"My Token\" (DAPP)! Token price is  {this.state.tokenPrice} Ether.\n           You </p>\n          <h2>price is {this.state.tokenPrice}</h2>\n          <h2>balance is {this.state.tokenBalance}</h2>\n          <h2>your account is {this.state.account}</h2>\n          <Form onSubmit={this.onSubmit}>\n\n\n            <Input focus\n              value={this.state.numberofToken}\n              onChange={event => this.setState({ numberofToken: event.target.value })}\n            />\n\n            <Button primary>Enter</Button>\n          </Form>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}