{"ast":null,"code":"var _jsxFileName = \"C:\\\\blockchain\\\\ethereum\\\\projects\\\\my-token\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport MyToken from \"../ethereum/build/MyToken.json\";\nimport MyTokenSale from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport Layout from '../components/layout';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      web3: null,\n      accounts: null,\n      account: null,\n      mytokenInstance: null,\n      mytokenSaleInstance: null,\n      tokenPrice: 0,\n      tokenBalance: 0,\n      numberofToken: 0,\n      errorMessage: '0',\n      loading: false\n    });\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      try {\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork1 = MyToken.networks[networkId];\n        const deployedNetwork2 = MyTokenSale.networks[networkId];\n        const mytokenInstance = new web3.eth.Contract(MyToken.abi, deployedNetwork1 && deployedNetwork1.address);\n        const mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi, deployedNetwork2 && deployedNetwork2.address);\n        this.setState({\n          web3,\n          accounts,\n          mytokenInstance,\n          mytokenSaleInstance\n        }, this.loadData);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"loadData\", async () => {\n      try {\n        const {\n          mytokenInstance,\n          mytokenSaleInstance,\n          web3\n        } = this.state;\n        let account = await web3.eth.getCoinbase();\n        let tokenPrice = await mytokenSaleInstance.methods.tokenPrice().call();\n        let tokenBalance = await mytokenInstance.methods.balanceOf(account).call();\n        this.setState({\n          tokenPrice: tokenPrice,\n          tokenBalance: tokenBalance,\n          account\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      this.setState({\n        errorMessage: '',\n        loading: true\n      });\n      event.preventDefault();\n\n      try {\n        const {\n          mytokenSaleInstance,\n          account\n        } = this.state;\n        await mytokenSaleInstance.methods.buyTokens(this.state.numberofToken).send({\n          from: account,\n          value: this.state.tokenPrice * this.state.numberofToken\n        });\n      } catch (error) {\n        this.setState({\n          errorMessage: error.message\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const web3 = this.state.web3;\n\n    if (!web3) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    const tokenPrice = web3.utils.fromWei(this.state.tokenPrice.toString(), 'ether');\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"My Token ICO SALE\"), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Introducing \\\"My Token\\\" (DAPP)! Token price is  \", tokenPrice, \" Ether. You Currently have \", this.state.tokenBalance, \" MyToken \"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      focus: true,\n      value: this.state.numberofToken,\n      onChange: event => this.setState({\n        numberofToken: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), __jsx(Button, {\n      primary: true,\n      loading: this.state.loa,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"Enter\"), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    })), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"tokens sold\"), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Your Account: \", this.state.account))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/blockchain/ethereum/projects/my-token/client/pages/index.js"],"names":["React","Component","getWeb3","MyToken","MyTokenSale","Button","Form","Input","Message","Layout","Home","web3","accounts","account","mytokenInstance","mytokenSaleInstance","tokenPrice","tokenBalance","numberofToken","errorMessage","loading","eth","getAccounts","networkId","net","getId","deployedNetwork1","networks","deployedNetwork2","Contract","abi","address","setState","loadData","error","console","log","state","getCoinbase","methods","call","balanceOf","event","preventDefault","buyTokens","send","from","value","message","render","utils","fromWei","toString","onSubmit","target","loa"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport MyToken from \"../ethereum/build/MyToken.json\";\nimport MyTokenSale from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input, Message } from 'semantic-ui-react';\nimport Layout from '../components/layout';\n\n\n\nclass Home extends Component {\n\n  state = {\n    web3: null,\n    accounts: null,\n    account: null,\n    mytokenInstance: null,\n    mytokenSaleInstance: null,\n    tokenPrice: 0,\n    tokenBalance: 0,\n    numberofToken: 0,\n    errorMessage: '0',\n    loading: false\n  }\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n\n      const deployedNetwork1 = MyToken.networks[networkId];\n      const deployedNetwork2 = MyTokenSale.networks[networkId];\n\n      const mytokenInstance = new web3.eth.Contract(MyToken.abi,\n        deployedNetwork1 && deployedNetwork1.address,\n      );\n      const mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi,\n        deployedNetwork2 && deployedNetwork2.address,\n      );\n\n\n      this.setState({ web3, accounts, mytokenInstance, mytokenSaleInstance }, this.loadData);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadData = async () => {\n    try {\n      const { mytokenInstance, mytokenSaleInstance, web3 } = this.state;\n\n      let account = await web3.eth.getCoinbase();\n      let tokenPrice = await mytokenSaleInstance.methods.tokenPrice().call();\n      let tokenBalance = await mytokenInstance.methods.balanceOf(account).call();\n\n      this.setState({ tokenPrice: tokenPrice, tokenBalance: tokenBalance, account });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  onSubmit = async (event) => {\n    this.setState({ errorMessage: '', loading: true });\n    event.preventDefault();\n    try {\n      const { mytokenSaleInstance, account } = this.state;\n      await mytokenSaleInstance.methods.buyTokens(this.state.numberofToken).send({ from: account, value: this.state.tokenPrice * this.state.numberofToken });\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    }\n    this.setState({ loading: false });\n  }\n\n  render() {\n    const web3 = this.state.web3;\n    if (!web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    const tokenPrice = web3.utils.fromWei(this.state.tokenPrice.toString(), 'ether');\n    return (\n      <Layout>\n        <div >\n          <div >\n            <h1 >My Token ICO SALE</h1>\n            <hr />\n            <br />\n          </div>\n          <div >\n            <p>Introducing \"My Token\" (DAPP)! Token price is  {tokenPrice} Ether.\n           You Currently have {this.state.tokenBalance} MyToken </p>\n            <br />\n\n            <Form onSubmit={this.onSubmit}>\n\n\n              <Input focus\n                value={this.state.numberofToken}\n                onChange={event => this.setState({ numberofToken: event.target.value })}\n              />\n\n              <Button primary loading={this.state.loa}>Enter</Button>\n              <Message error header=\"Oops!\" content={this.state.errorMessage} />\n            </Form>\n            <br />\n            <p>tokens sold</p>\n            <hr />\n            <p>Your Account: {this.state.account}</p>\n          </div>\n        </div>\n\n      </Layout>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}