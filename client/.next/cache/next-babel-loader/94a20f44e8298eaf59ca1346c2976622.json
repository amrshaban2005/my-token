{"ast":null,"code":"var _jsxFileName = \"C:\\\\blockchain\\\\ethereum\\\\projects\\\\my-token\\\\client\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport MyToken from \"../ethereum/build/MyToken.json\";\nimport MyTokenSale from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport Layout from '../components/layout';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      web3: null,\n      accounts: null,\n      account: null,\n      mytokenInstance: null,\n      mytokenSaleInstance: null,\n      tokenPrice: '1000000000000000',\n      tokenBalance: 0,\n      numberofToken: 0\n    });\n\n    _defineProperty(this, \"componentDidMount\", async () => {\n      try {\n        const web3 = await getWeb3();\n        const accounts = await web3.eth.getAccounts();\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = MyToken.networks[networkId];\n        const mytokenInstance = new web3.eth.Contract(MyToken.abi, deployedNetwork && deployedNetwork.address);\n        const mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi, deployedNetwork && deployedNetwork.address);\n        this.setState({\n          web3,\n          accounts,\n          mytokenInstance: mytokenInstance,\n          mytokenSaleInstance: mytokenSaleInstance\n        }, this.loadData);\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"loadData\", async () => {\n      try {\n        const {\n          mytokenInstance,\n          mytokenSaleInstance,\n          accounts,\n          web3\n        } = this.state;\n        let account = await web3.eth.getCoinbase(); //debugger;\n        //let tokenName = await mytokenInstance.methods.name().call();\n        // let tokenPrice = await mytokenSaleInstance.methods.tokenPrice().call();\n\n        let tokenPrice = web3.utils.fromWei(this.state.tokenPrice, 'ether');\n        let tokenBalance = await mytokenInstance.methods.balanceOf(account).call(); // alert(tokenPrice);\n        //alert(tokenBalance);\n\n        this.setState({\n          tokenPrice: tokenPrice,\n          tokenBalance: tokenBalance,\n          account\n        });\n      } catch (error) {\n        alert(error);\n        console.log(error);\n      }\n    });\n\n    _defineProperty(this, \"onSubmit\", async () => {\n      const {\n        mytokenSaleInstance,\n        account\n      } = this.state;\n      await mytokenSaleInstance.methods.buyTokens(this.state.numberofToken).send({\n        from: account,\n        value: this.state.tokenPrice * this.state.numberofToken\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 14\n        }\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"My Token ICO SALE\"), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Introducing \\\"\\\"\"), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"price is \", this.state.tokenPrice), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"balance is \", this.state.tokenBalance), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"your account is \", this.state.account), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, __jsx(Input, {\n      focus: true,\n      value: this.state.numberofToken,\n      onChange: event => this.setState({\n        numberofToken: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), __jsx(Button, {\n      primary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Enter\"))));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/blockchain/ethereum/projects/my-token/client/pages/index.js"],"names":["React","Component","getWeb3","MyToken","MyTokenSale","Button","Form","Input","Layout","Home","web3","accounts","account","mytokenInstance","mytokenSaleInstance","tokenPrice","tokenBalance","numberofToken","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","setState","loadData","error","console","log","state","getCoinbase","utils","fromWei","methods","balanceOf","call","alert","buyTokens","send","from","value","render","onSubmit","event","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport getWeb3 from '../ethereum/getWeb3';\nimport MyToken from \"../ethereum/build/MyToken.json\";\nimport MyTokenSale from \"../ethereum/build/MyTokenSale.json\";\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport Layout from '../components/layout';\n\n\n\nclass Home extends Component {\n\n  state = {\n    web3: null,\n    accounts: null,\n    account: null,\n    mytokenInstance: null,\n    mytokenSaleInstance: null,\n    tokenPrice: '1000000000000000',\n    tokenBalance: 0,\n    numberofToken: 0\n  }\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n\n      const deployedNetwork = MyToken.networks[networkId];\n\n      const mytokenInstance = new web3.eth.Contract(MyToken.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      const mytokenSaleInstance = new web3.eth.Contract(MyTokenSale.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n\n      this.setState({ web3, accounts, mytokenInstance: mytokenInstance, mytokenSaleInstance: mytokenSaleInstance }, this.loadData);\n    }\n    catch (error) {\n      console.log(error);\n    }\n  }\n\n  loadData = async () => {\n    try {\n      const { mytokenInstance, mytokenSaleInstance, accounts, web3 } = this.state;\n      let account = await web3.eth.getCoinbase();\n\n      //debugger;\n      //let tokenName = await mytokenInstance.methods.name().call();\n\n      // let tokenPrice = await mytokenSaleInstance.methods.tokenPrice().call();\n      let tokenPrice = web3.utils.fromWei(this.state.tokenPrice, 'ether');\n\n      let tokenBalance = await mytokenInstance.methods.balanceOf(account).call();\n      // alert(tokenPrice);\n      //alert(tokenBalance);\n      this.setState({ tokenPrice: tokenPrice, tokenBalance: tokenBalance, account });\n    } catch (error) {\n      alert(error);\n      console.log(error);\n    }\n  }\n\n  onSubmit = async () => {\n    const { mytokenSaleInstance, account } = this.state;\n    await mytokenSaleInstance.methods.buyTokens(this.state.numberofToken).send({ from: account, value: this.state.tokenPrice * this.state.numberofToken });\n\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <Layout>\n        <div>\n          <h1>My Token ICO SALE</h1>\n          <hr />\n          <p>Introducing \"\"</p>\n          <h2>price is {this.state.tokenPrice}</h2>\n          <h2>balance is {this.state.tokenBalance}</h2>\n          <h2>your account is {this.state.account}</h2>\n          <Form onSubmit={this.onSubmit}>\n\n\n            <Input focus\n              value={this.state.numberofToken}\n              onChange={event => this.setState({ numberofToken: event.target.value })}\n            />\n\n            <Button primary>Enter</Button>\n          </Form>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}